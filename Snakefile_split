ACCESSION = [item for sublist in glob_wildcards("downloads/sra_{accession}.fastq.gz") for item in sublist]
print("ACCESSION USED:", ACCESSION)


# Target rule specifying the desired final output
rule all:
    input:
        expand("results_{accession}.txt", accession=ACCESSION)

# Checkpoint for dynamically splitting the FASTQ file
checkpoint split_fastq:
    input:
        fastq="downloads/sra_{accession}.fastq.gz"
    output:
        directory("split_files/{accession}/")        
    conda:
        "envs/seqkit.yaml"
    shell:
        """
        # your shell commands for splitting the file
        mkdir -p {output}

        #run seqkit split2       
        seqkit split2 -s 1000000 -O {output} {input.fastq} 
        """

# Input function to handle output of checkpoint
def get_split_files(wildcards):
    checkpoint_output = checkpoints.split_fastq.get(accession=wildcards.accession).output[0]
    parts = glob_wildcards(os.path.join(checkpoint_output, "sra_{accession}.part_{i}.fastq.gz")).i
    
    expanded_paths = expand("split_files/{accession}/sra_{accession}.part_{i}.fastq.gz",
                            accession=wildcards.accession,
                            i=parts)
    return expanded_paths



# Rule to utilize the split FASTQ files
rule use_split_files:
    input:
        get_split_files  # Utilize the input function here
    output:
        "results_{accession}.txt"
    shell:
        """
        echo {input} | tr ' ' '\n' > {output}
        """
